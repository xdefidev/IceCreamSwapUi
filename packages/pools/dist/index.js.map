{"version":3,"sources":["../src/constants/index.ts","../src/constants/pools/index.ts","../src/constants/pools/1116.ts","../src/types.ts","../src/constants/pools/32520.ts","../src/constants/pools/50.ts","../src/constants/pools/245022934.ts","../src/constants/supportedChains.ts","../src/utils/isPoolsSupported.ts","../src/constants/contracts.ts","../src/queries/fetchPools.ts","../../utils/bigNumber.ts","../src/abis/ISousChef.ts","../src/abis/ISousChefV2.ts","../src/abis/ISmartChef.ts","../src/abis/ISousChefV3.ts","../src/utils/getContractAddress.ts","../src/utils/isLegacyPool.ts","../src/utils/apr.ts","../src/utils/getPoolContractBySousId.ts","../src/abis/ISousChefBNB.ts","../src/queries/fetchUserPoolsData.ts","../src/queries/fetchUserIfo.ts","../src/abis/ICake.ts","../src/queries/fetchVaultPublic.ts","../src/abis/ICakeVaultV2.ts","../src/queries/getAddresses.ts","../src/queries/fetchVaultUser.ts","../src/abis/ICakeFlexibleSideVaultV2.ts"],"names":["ChainId","PoolCategory","VaultKey","livePools","finishedPools","pools","BigNumber","fromPairs","erc20ABI","getContract"],"mappings":"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","sourcesContent":["import { getChain } from '@icecreamswap/constants'\n\nexport * from './pools'\nexport * from './contracts'\nexport * from './supportedChains'\n\n\n\nexport const SECONDS_IN_YEAR = 31536000 // 365 * 24 * 60 * 60\n\n\nexport const blockTime = (chainId: number) => {\n  const chain = getChain(chainId)\n  return chain? chain.blockInterval: 3\n}\n\nexport const blocksPerYear = (chainId: number) => {\n  return SECONDS_IN_YEAR / blockTime(chainId)\n}\n","import { ChainId } from '@pancakeswap/sdk'\n\nimport { pools as corePools, livePools as coreLivePools } from './1116'\nimport { pools as bitgertPools, livePools as bitgertLivePools } from './32520'\nimport { pools as xdcPools, livePools as xdcLivePools } from './50'\nimport { pools as neonPools, livePools as neonLivePools } from './245022934'\nimport { SerializedPool } from '../../types'\nimport { SupportedChainId } from '../supportedChains'\nimport { isPoolsSupported } from '../../utils/isPoolsSupported'\n\nexport type PoolsConfigByChain<TChainId extends ChainId> = {\n  [chainId in TChainId]: SerializedPool[]\n}\n\nexport const POOLS_CONFIG_BY_CHAIN = {\n  [ChainId.CORE]: corePools,\n  [ChainId.BITGERT]: bitgertPools,\n  [ChainId.XDC]: xdcPools,\n  [ChainId.NEON]: neonPools,\n} as PoolsConfigByChain<SupportedChainId>\n\nexport const LIVE_POOLS_CONFIG_BY_CHAIN = {\n  [ChainId.BSC]: coreLivePools,\n  [ChainId.BITGERT]: bitgertLivePools,\n  [ChainId.XDC]: xdcLivePools,\n  [ChainId.NEON]: neonLivePools,\n} as PoolsConfigByChain<SupportedChainId>\n\nexport const getPoolsConfig = (chainId: ChainId) => {\n  if (!isPoolsSupported(chainId)) {\n    return undefined\n  }\n  return POOLS_CONFIG_BY_CHAIN[chainId]\n}\n\nexport const getLivePoolsConfig = (chainId: ChainId) => {\n  if (!isPoolsSupported(chainId)) {\n    return undefined\n  }\n  return LIVE_POOLS_CONFIG_BY_CHAIN[chainId]\n}\n\nexport const MAX_LOCK_DURATION = 31536000\nexport const UNLOCK_FREE_DURATION = 604800\nexport const ONE_WEEK_DEFAULT = 604800\nexport const BOOST_WEIGHT = 20000000000000n\nexport const DURATION_FACTOR = 31536000n\n","import {coreTokens} from \"@pancakeswap/tokens\";\n\nimport {PoolCategory, SerializedPool} from '../../types'\n\nexport const livePools: SerializedPool[] = [// souceId can be any positive number as long as it is unique and not 0\n  // version can't be 3 as that uses the pancake profiles that we did not implement\n  {\n    sousId: 35,\n    stakingToken: coreTokens.core,\n    earningToken: coreTokens.core,\n    contractAddress: '0xFd072F40E17070f975890D1772d6fdC7Cb44a63b',\n    poolCategory: PoolCategory.BINANCE_AUTO,\n    fixedApr: '26.0',\n    version: 2,\n  },\n  {\n    sousId: 68,\n    stakingToken: coreTokens.asx,\n    earningToken: coreTokens.asx,\n    contractAddress: '0x079189e12222b5030d1BF3Bca93b92292F572BB4',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.002314',\n    version: 2,\n  },\n  {\n    sousId: 59,\n    stakingToken: coreTokens.asx,\n    earningToken: coreTokens.asx,\n    contractAddress: '0x45Bf1C5fe305eEcBE501fC2BE4F906102b4EFFA3',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.002314',\n    version: 2,\n  },\n  {\n    sousId: 65,\n    stakingToken: coreTokens.laugh,\n    earningToken: coreTokens.laugh,\n    contractAddress: '0x39011422e4d333363831bCBfB4A55A29E8530BDc',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '6.134',\n    version: 2,\n  },\n  {\n    sousId: 67,\n    stakingToken: coreTokens.dogwif,\n    earningToken: coreTokens.dogwif,\n    contractAddress: '0xc0d8097b6783C9890aA66FEF6B8fe801faD9b759',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '332.75',\n    version: 2,\n  },\n  {\n    sousId: 66,\n    stakingToken: coreTokens.ice,\n    earningToken: coreTokens.laugh,\n    contractAddress: '0x11Bb223920a5F0D4d817542BC2117Bd0b1739D0b',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '6.134',\n    version: 2,\n  },\n  {\n    sousId: 61,\n    stakingToken: coreTokens.pump,\n    earningToken: coreTokens.pump,\n    contractAddress: '0xD24c62d47229D8F49d7d5365374a951a21679C4C',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '173611.0',\n    version: 2,\n  },\n\n  {\n    sousId: 62,\n    stakingToken: coreTokens.asx,\n    earningToken: coreTokens.pump,\n    contractAddress: '0xf8D0e4C22F52B0FC93bf6Ad2caa57Ae511D1E2C6',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '114056.0',\n    version: 2,\n  },\n  {\n    sousId: 64,\n    stakingToken: coreTokens.asx,\n    earningToken: coreTokens.laugh,\n    contractAddress: '0xf9Cde06e56BD48505C02171c828c52D260BcC48D',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '6.154',\n    version: 2,\n  },\n  {\n    sousId: 63,\n    stakingToken: coreTokens.cctr,\n    earningToken: coreTokens.cctr,\n    contractAddress: '0x6e8888d763db12B3D3195D10aE41FACFE6D2646F',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.001157',\n    version: 2,\n  },\n  {\n    sousId: 60,\n    stakingToken: coreTokens.bcore_new,\n    earningToken: coreTokens.bcore_new,\n    contractAddress: '0xa2cc76a90E2A88783cC060CC323314F18F3b9dDe',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '4.745',\n    version: 2,\n  },\n  {\n    sousId: 58,\n    stakingToken: coreTokens.life,\n    earningToken: coreTokens.ripple,\n    contractAddress: '0xF81c7eCe5390eDd5f9600b7955D8AF2606F3d2cb',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000289',\n    version: 2,\n  },\n  {\n    sousId: 57,\n    stakingToken: coreTokens.freecore,\n    earningToken: coreTokens.freecore,\n    contractAddress: '0x2f44ACeca40B91D3852D88afee84e8259d914DfB',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.771',\n    version: 2,\n  },\n  {\n    sousId: 56,\n    stakingToken: coreTokens.cBTC,\n    earningToken: coreTokens.ceth,\n    contractAddress: '0xBd0484023667aA5BEA3040ae2F0addeD5C04235A',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000424',\n    version: 2,\n  },\n  {\n    sousId: 55,\n    stakingToken: coreTokens.ceth,\n    earningToken: coreTokens.cBTC,\n    contractAddress: '0xc8192Ad3F6c98Bf41447f0C05C71Cf5Bf3Bf3D5e',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000424',\n    version: 2,\n  },\n  {\n    sousId: 54,\n    stakingToken: coreTokens.koci,\n    earningToken: coreTokens.koci,\n    contractAddress: '0x2223B01656Be90A1ac4A1b7D60E7D4ae8b7a17a0',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00289',\n    version: 2,\n  },\n  {\n    sousId: 52,\n    stakingToken: coreTokens.cdao,\n    earningToken: coreTokens.ice,\n    contractAddress: '0x080dA1910f1A631317A5a665ACaa25e0b2E41a3B',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000289',\n    version: 2,\n  },\n  {\n    sousId: 51,\n    stakingToken: coreTokens.pipi,\n    earningToken: coreTokens.pipi,\n    contractAddress: '0x78eD864D5601474408e2e663679fD184CfA3F306',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '45.2660',\n    version: 2,\n  },\n  {\n    sousId: 53,\n    stakingToken: coreTokens.youngparrot,\n    earningToken: coreTokens.youngparrot,\n    contractAddress: '0x0cA6CB85Df53705B48147285F6305bb949525BdF',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: ' 1.9290',\n    version: 2,\n  },\n  {\n    sousId: 50,\n    stakingToken: coreTokens.youngparrot,\n    earningToken: coreTokens.youngparrot,\n    contractAddress: '0x650963Bcf8e55c0ec811a0604beCABa7237902f9',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.9645',\n    version: 2,\n  },\n  {\n  sousId: 49,\n    stakingToken: coreTokens.cBTC,\n    earningToken: coreTokens.cBTC,\n    contractAddress: '0xD7F7A62c9ED504Ce2026034199d0D8718582bA26',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000868',\n    version: 2,\n  },\n].map((p: any) => ({\n  ...p,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\n// known finished pools\nconst finishedPools = [\n  {\n    sousId: 48,\n    stakingToken: coreTokens.gator,\n    earningToken: coreTokens.gator,\n    contractAddress: '0x180216e5a9ea1c8Ec8ddb9F92BF49A8708b33ebF',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '11.574',\n    version: 2,\n  },\n  {\n    sousId: 47,\n    stakingToken: coreTokens.gator,\n    earningToken: coreTokens.gator,\n    contractAddress: '0x831d462629c4eb296f497138178B62a71e9EF39f',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '11.574',\n    version: 2,\n  },\n  {\n    sousId: 46,\n    stakingToken: coreTokens.cBTC,\n    earningToken: coreTokens.cBTC,\n    contractAddress: '0x96091BE65f1Ed0bD1C431DceaCC656041cC46de6',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.000528',\n    version: 2,\n  },\n  {\n    sousId: 45,\n    stakingToken: coreTokens.cBTC,\n    earningToken: coreTokens.cBTC,\n    contractAddress: '0xd711A3E33Cba7dB01DA9ABC4e645225d7F06d6c0',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.009259',\n    version: 2,\n  },\n  {\n    sousId: 44,\n    stakingToken: coreTokens.hice,\n    earningToken: coreTokens.kice,\n    contractAddress: '0x28DD255b5caD5D04AD397f1A9CddbC1F9093E21d',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '1.0995',\n    version: 2,\n  },\n  {\n    sousId: 43,\n    stakingToken: coreTokens.hice,\n    earningToken: coreTokens.hice,\n    contractAddress: '0x18D2d3Cc7397f6Fb703B7c499F1b7834643245CE',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.17361',\n    version: 2,\n  },\n  {\n    sousId: 42,\n    stakingToken: coreTokens.kigu,\n    earningToken: coreTokens.kigu,\n    contractAddress: '0x60f9348289315076a82e67d86b9d5429b21750d9',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00419061',\n    version: 2,\n  },\n  {\n    sousId: 40,\n    stakingToken: coreTokens.lung,\n    earningToken: coreTokens.lung,\n    contractAddress: '0x00cb88c63f1f6e2ebd946800930b9f23458ed55f',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.79821',\n    version: 2,\n  },\n  {\n    sousId: 39,\n    stakingToken: coreTokens.kigu,\n    earningToken: coreTokens.kigu,\n    contractAddress: '0xd7973da4e8559169ddbd4a5b6abae9a4a5cdc49a',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0115',\n    version: 2,\n  },\n  {\n    sousId: 37,\n    stakingToken: coreTokens.block,\n    earningToken: coreTokens.block,\n    contractAddress: '0xdf3ab9de4f88c6cdf922e4e6dd23ea58412d9b1b',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.399106',\n    version: 2,\n  },\n  {\n    sousId: 38,\n    stakingToken: coreTokens.musk,\n    earningToken: coreTokens.musk,\n    contractAddress: '0xdf276b139fb7f8637ecdffb2e28c2bc824c4c2eb',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.26340996',\n    version: 2,\n  },\n  {\n    sousId: 25,\n    stakingToken: coreTokens.ucore,\n    earningToken: coreTokens.ucore,\n    contractAddress: '0x592feb264e4fc819279f001b5c23efb12d77d78d',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.192',\n    version: 2,\n  },\n  {\n    sousId: 36,\n    stakingToken: coreTokens.asi,\n    earningToken: coreTokens.asi,\n    contractAddress: '0x2ddc75c6311640a1482f0a39a11314d2b7690494',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '15817.9',\n    version: 2,\n  },\n  {\n    sousId: 32,\n    stakingToken: coreTokens.cmct,\n    earningToken: coreTokens.but,\n    contractAddress: '0x0f3e5fcb8e47e668d03e2f34914cb2ca42827971',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.009625',\n    version: 2,\n  },\n  {\n    sousId: 33,\n    stakingToken: coreTokens.bliz,\n    earningToken: coreTokens.bliz,\n    contractAddress: '0xddda927af85ef136ef7fc0821a201d952e0fc6f0',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.00578',\n    version: 2,\n  },\n  {\n    sousId: 34,\n    stakingToken: coreTokens.asi,\n    earningToken: coreTokens.asi,\n    contractAddress: '0xa98e474e59027c0f1ac46a73a631c3e2c3e40882',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '8101',\n    version: 2,\n  },\n  {\n    sousId: 31,\n    stakingToken: coreTokens.hobo,\n    earningToken: coreTokens.hobo,\n    contractAddress: '0x8fda52109c29dacb2e990f8909f1b56b30266dd1',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.868',\n    version: 2,\n  },\n  {\n    sousId: 28,\n    stakingToken: coreTokens.miidas,\n    earningToken: coreTokens.miidas,\n    contractAddress: '0xc1a46f6f788bded730fbf275fc04811c5738f04b',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '14.467592',\n    version: 2,\n  },\n  {\n    sousId: 29,\n    stakingToken: coreTokens.crystal,\n    earningToken: coreTokens.crystal,\n    contractAddress: '0xc1b3b56b0bcc38805d39bb2c03b40f12812b6d96',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '8.642743055555556',\n    version: 2,\n  },\n  {\n    sousId: 30,\n    stakingToken: coreTokens.maxi,\n    earningToken: coreTokens.maxi,\n    contractAddress: '0x5d62ee571e2159d53bcb4374bdfe715d3c45b8e4',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.033101851851851855',\n    version: 2,\n  },\n  {\n    sousId: 26,\n    stakingToken: coreTokens.bcore_new,\n    earningToken: coreTokens.bcore_new,\n    contractAddress: '0x2c36b4ff3a77ff44bd335e9e73628b16238d277b',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '115.74074074',\n    version: 2,\n  },\n  {\n    sousId: 27,\n    stakingToken: coreTokens.woof,\n    earningToken: coreTokens.woof,\n    contractAddress: '0x60c63d1855ba9b876c39b2f2422d1495caaee7ba',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.0347',\n    version: 2,\n  },\n  {\n    sousId: 24,\n    stakingToken: coreTokens.block,\n    earningToken: coreTokens.block,\n    contractAddress: '0x920704424e7930e3d133fae25f633b74589d72c3',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.239',\n    version: 2,\n  },\n  {\n    sousId: 7,\n    stakingToken: coreTokens.kishu,\n    earningToken: coreTokens.kishu,\n    contractAddress: '0x3A38Ef4f445D0e9546d076506eE1a411cf62f879',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '34722222',\n    version: 2,\n  },\n  {\n    sousId: 9,\n    stakingToken: coreTokens.word,\n    earningToken: coreTokens.word,\n    contractAddress: '0xE72c8D91fc12b38D31A091Deff08cf411e062842',\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: '0.038',\n    version: 2,\n  },\n].map((p: any) => ({\n  ...p,\n  isFinished: true,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\nexport const pools: SerializedPool[] = [...livePools, ...finishedPools]\n","import { ChainId } from '@pancakeswap/sdk'\nimport { PublicClient, Address } from 'viem'\nimport type { SerializedWrappedToken } from '@pancakeswap/token-lists'\nimport BigNumber from 'bignumber.js'\n\nexport type OnChainProvider = ({ chainId }: { chainId?: ChainId }) => PublicClient\n\nexport type SerializedBigNumber = string\n\nexport interface Addresses {\n  [chainId: number]: string\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'BINANCE_AUTO' = 'BINANCE_AUTO', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\n// @deprecated\nexport interface LegacyPoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n  version?: number\n  fixedApr?: number\n}\n\nexport interface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerSecond: string\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\ninterface GenericToken {\n  decimals: number\n  symbol: string\n  address: string\n}\n\nexport interface LegacySerializedPoolConfig<T> extends LegacyPoolConfigBaseProps {\n  earningToken: T & GenericToken\n  stakingToken: T & GenericToken\n}\n\nexport interface SerializedPoolConfig<T> extends PoolConfigBaseProps {\n  earningToken: T & GenericToken\n  stakingToken: T & GenericToken\n}\n\nexport type LegacySerializedPool = LegacySerializedPoolConfig<SerializedWrappedToken>\n\nexport type UpgradedSerializedPool = SerializedPoolConfig<SerializedWrappedToken>\n\nexport type SerializedPool = LegacySerializedPool | UpgradedSerializedPool\n\nexport type UpgradedSerializedPoolWithInfo = UpgradedSerializedPool & SerializedPoolInfo\n\nexport type LegacySerializedPoolWithInfo = LegacySerializedPool & SerializedPoolInfo\n\nexport type SerializedPoolWithInfo = LegacySerializedPoolWithInfo | UpgradedSerializedPoolWithInfo\n\nexport interface SerializedVaultUser {\n  isLoading: boolean\n  userShares: SerializedBigNumber\n  cakeAtLastUserAction: SerializedBigNumber\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\n\nexport interface SerializedLockedVaultUser extends SerializedVaultUser {\n  lockStartTime: string\n  lockEndTime: string\n  userBoostedShare: SerializedBigNumber\n  locked: boolean\n  lockedAmount: SerializedBigNumber\n  currentPerformanceFee: SerializedBigNumber\n  currentOverdueFee: SerializedBigNumber\n}\n\nexport interface LegacyDeserializedPoolConfig<T> extends LegacyPoolConfigBaseProps {\n  earningToken: T & GenericToken\n  stakingToken: T & GenericToken\n}\n\nexport interface UpgradedDeserializedPoolConfig<T> extends PoolConfigBaseProps {\n  earningToken: T & GenericToken\n  stakingToken: T & GenericToken\n}\n\nexport type DeserializedPoolConfig<T> = LegacyDeserializedPoolConfig<T> | UpgradedDeserializedPoolConfig<T>\n\ninterface SerializedPoolInfo extends CorePoolProps {\n  totalStaked?: string\n  stakingLimit?: string\n  stakingLimitEndTimestamp?: number\n  profileRequirement?: {\n    required: boolean\n    thresholdPoints: string\n  }\n  userDataLoaded?: boolean\n  userData?: {\n    allowance: string\n    stakingTokenBalance: string\n    stakedBalance: string\n    pendingReward: string\n  }\n}\n\ninterface PoolInfo extends CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  stakingLimitEndTimestamp?: number\n  profileRequirement?: {\n    required: boolean\n    thresholdPoints: BigNumber\n  }\n  userDataLoaded?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport type UpgradedDeserializedPool<T> = UpgradedDeserializedPoolConfig<T> & PoolInfo\n\nexport type LegacyDeserializedPool<T> = LegacyDeserializedPoolConfig<T> & PoolInfo\n\nexport type DeserializedPool<T> = UpgradedDeserializedPool<T> | LegacyDeserializedPool<T>\n\nexport type DeserializedPoolVault<T> = DeserializedPool<T> & DeserializedCakeVault\nexport type DeserializedPoolLockedVault<T> = DeserializedPool<T> & DeserializedLockedCakeVault\n\nexport interface DeserializedLockedVaultUser extends DeserializedVaultUser {\n  lastDepositedTime: string\n  lastUserActionTime: string\n  lockStartTime: string\n  lockEndTime: string\n  burnStartTime: string\n  userBoostedShare: BigNumber\n  locked: boolean\n  lockedAmount: BigNumber\n  currentPerformanceFee: BigNumber\n  currentOverdueFee: BigNumber\n}\n\nexport interface DeserializedLockedCakeVault extends Omit<DeserializedCakeVault, 'userData'> {\n  totalLockedAmount?: BigNumber\n  userData?: DeserializedLockedVaultUser\n}\n\nexport interface SerializedVaultFees {\n  performanceFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface DeserializedVaultFees extends SerializedVaultFees {\n  performanceFeeAsDecimal: number\n}\n\nexport interface DeserializedVaultUser {\n  isLoading: boolean\n  userShares: BigNumber\n  cakeAtLastUserAction: BigNumber\n  lastDepositedTime: string\n  lastUserActionTime: string\n  balance: {\n    cakeAsNumberBalance: number\n    cakeAsBigNumber: BigNumber\n    cakeAsDisplayBalance: string\n  }\n}\n\nexport interface DeserializedCakeVault {\n  totalShares?: BigNumber\n  totalLockedAmount?: BigNumber\n  pricePerFullShare: BigNumber\n  totalCakeInVault?: BigNumber\n  fees?: DeserializedVaultFees\n  userData?: DeserializedVaultUser\n}\n\nexport enum VaultKey {\n  CakeVaultV1 = 'cakeVaultV1',\n  CakeVault = 'cakeVault',\n  CakeFlexibleSideVault = 'cakeFlexibleSideVault',\n  IfoPool = 'ifoPool',\n}\n\ninterface CorePoolProps {\n  startTimestamp?: number\n  endTimestamp?: number\n  apr?: number\n  rawApr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  vaultKey?: VaultKey\n}\n","import { bitgertTokens } from \"@pancakeswap/tokens\";\n\nimport { PoolCategory, SerializedPool } from '../../types'\n\nexport const livePools: SerializedPool[] = [\n  // {\n  //   sousId: 4,\n  //   stakingToken: bitgertTokens.miidas,\n  //   earningToken: bitgertTokens.miidas,\n  //   contractAddress: '0xf4c78d403527ba2fb67ab599efea0a739d3d6547',\n  //   poolCategory: PoolCategory.CORE,\n  //   tokenPerBlock: '12.5',\n  //   version: 2,\n  // },\n].map((p: any) => ({\n  ...p,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\n// known finished pools\nconst finishedPools = [].map((p: any) => ({\n  ...p,\n  isFinished: true,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\nexport const pools: SerializedPool[] = [...livePools, ...finishedPools]\n","import { xdcTokens } from \"@pancakeswap/tokens\";\n\nimport { PoolCategory, SerializedPool } from '../../types'\n\nexport const livePools: SerializedPool[] = [\n  // {\n  //   sousId: 2,\n  //   stakingToken: xdcTokens.ice,\n  //   earningToken: xdcTokens.btcx,\n  //   contractAddress: '0x7b7387513444D4336e5a7E9cF75A2Bc7a38721A9',\n  //   poolCategory: PoolCategory.CORE,\n  //   tokenPerBlock: '0.02093',\n  //   version: 2,\n  // },\n  // {\n  //   sousId: 3,\n  //   stakingToken: xdcTokens.btcx,\n  //   earningToken: xdcTokens.btcx,\n  //   contractAddress: '0x788C14Ddb3D4e9036D1fC98D2324f3F86FD43fCf',\n  //   poolCategory: PoolCategory.CORE,\n  //   tokenPerBlock: '0.02093',\n  //   version: 2,\n  // },\n].map((p: any) => ({\n  ...p,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\n// known finished pools\nconst finishedPools = [].map((p: any) => ({\n  ...p,\n  isFinished: true,\n  stakingToken: p.stakingToken.serialize,\n  earningToken: p.earningToken.serialize,\n}))\n\nexport const pools: SerializedPool[] = [...livePools, ...finishedPools]\n","import { neonTokens } from \"@pancakeswap/tokens\";\n\nimport { PoolCategory, SerializedPool } from '../../types'\n\nexport const livePools: SerializedPool[] = [// souceId can be any positive number as long as it is unique and not 0\n    // version can't be 3 as that uses the pancake profiles that we did not implement\n\n    // {\n    //     sousId: 49,\n    //     stakingToken: neonTokens.ice,\n    //     earningToken: neonTokens.chonk,\n    //     contractAddress: '0x2A6f065BDC2c3DE88d679b15E366432d788C2C29',\n    //     poolCategory: PoolCategory.CORE,\n    //     tokenPerBlock: '0.496',\n    //     version: 2,\n    // },\n\n].map((p: any) => ({\n    ...p,\n    stakingToken: p.stakingToken.serialize,\n    earningToken: p.earningToken.serialize,\n}))\n\n// known finished pools\nconst finishedPools = [].map((p: any) => ({\n    ...p,\n    isFinished: true,\n    stakingToken: p.stakingToken.serialize,\n    earningToken: p.earningToken.serialize,\n}))\n\nexport const pools: SerializedPool[] = [...livePools, ...finishedPools]\n","import { ChainId } from \"@pancakeswap/sdk\";\n\nexport const SUPPORTED_CHAIN_IDS = [ChainId.CORE, ChainId.NEON, ChainId.BITGERT, ChainId.XDC]\n\nexport type SupportedChainId = (typeof SUPPORTED_CHAIN_IDS)[number]\n","import { SupportedChainId, SUPPORTED_CHAIN_IDS } from '../constants/supportedChains'\n\nexport function isPoolsSupported(chainId: number): chainId is SupportedChainId {\n  return SUPPORTED_CHAIN_IDS.includes(chainId)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { Address } from 'viem'\n\nimport { SupportedChainId } from './supportedChains'\n\nexport type ContractAddresses<T extends ChainId = SupportedChainId> = {\n  [chainId in T]: Address\n}\n\nexport const IICE = {\n  [ChainId.BSC]: '0x3C458828D1622F5f4d526eb0d24Da8C4Eb8F07b1',\n} as ContractAddresses\n\nexport const ICE_VAULT = {\n  [ChainId.BSC]: '0x45c54210128a065de780C4B0Df3d16664f7f859e',\n} as ContractAddresses\n\nexport const ICE_FLEXIBLE_SIDE_VAULT = {\n  [ChainId.BSC]: '0x615e896A8C2CA8470A2e9dc2E9552998f8658Ea0',\n} as ContractAddresses\n","import BigNumber from 'bignumber.js'\nimport fromPairs from 'lodash/fromPairs'\nimport chunk from 'lodash/chunk'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { erc20ABI } from 'wagmi'\n\nimport { blockTime, getPoolsConfig } from '../constants'\nimport { sousChefABI } from '../abis/ISousChef'\nimport { sousChefV2ABI } from '../abis/ISousChefV2'\nimport { smartChefABI } from '../abis/ISmartChef'\nimport { sousChefV3ABI } from '../abis/ISousChefV3'\nimport { LegacySerializedPool, OnChainProvider, UpgradedSerializedPool } from '../types'\nimport { isLegacyPool, isUpgradedPool } from '../utils'\n\nconst getLivePoolsWithEnd = async (chainId: ChainId) => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    return null\n  }\n  return poolsConfig.filter((p) => p.sousId !== 0 && !p.isFinished)\n}\n\nasync function fetchUpgradedPoolsTimeLimits(\n  pools: UpgradedSerializedPool[],\n  chainId: ChainId,\n  provider: OnChainProvider,\n) {\n  if (!pools.length) {\n    return []\n  }\n\n  const calls = pools.flatMap(({ contractAddress }) => {\n    return [\n      {\n        abi: smartChefABI,\n        address: contractAddress,\n        functionName: 'startTimestamp',\n      },\n      {\n        abi: smartChefABI,\n        address: contractAddress,\n        functionName: 'endTimestamp',\n      },\n    ] as const\n  })\n\n  const client = provider({ chainId })\n  const startEndRaw = await client.multicall({\n    contracts: calls,\n    allowFailure: false,\n  })\n\n  const startEndResult = startEndRaw.reduce<bigint[][]>((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / 2)\n\n    if (!resultArray[chunkIndex]) {\n      // eslint-disable-next-line no-param-reassign\n      resultArray[chunkIndex] = [] // start a new chunk\n    }\n\n    resultArray[chunkIndex].push(item)\n\n    return resultArray\n  }, [])\n\n  return pools.map((cakePoolConfig, index) => {\n    const [startTimestamp, endTimestamp] = startEndResult[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startTimestamp: Number(startTimestamp),\n      endTimestamp: Number(endTimestamp),\n    }\n  })\n}\n\nconst fetchLegacyPoolsBlockLimits = async (\n  pools: LegacySerializedPool[],\n  chainId: ChainId,\n  provider: OnChainProvider,\n) => {\n  if (!pools.length) {\n    return []\n  }\n  const startEndBlockCalls = pools.flatMap(({ contractAddress }) => {\n    return [\n      {\n        abi: sousChefABI,\n        address: contractAddress,\n        functionName: 'startBlock',\n      },\n      {\n        abi: sousChefABI,\n        address: contractAddress,\n        functionName: 'bonusEndBlock',\n      },\n    ] as const\n  })\n\n  const client = provider({ chainId })\n\n  const [block, startEndBlockRaw] = await Promise.all([\n    client.getBlock({ blockTag: 'latest' }),\n    client.multicall({\n      contracts: startEndBlockCalls,\n      allowFailure: false,\n    }),\n  ])\n\n  const startEndBlockResult = startEndBlockRaw.reduce<bigint[][]>((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / 2)\n\n    if (!resultArray[chunkIndex]) {\n      // eslint-disable-next-line no-param-reassign\n      resultArray[chunkIndex] = [] // start a new chunk\n    }\n\n    resultArray[chunkIndex].push(item)\n\n    return resultArray\n  }, [])\n\n  const getTimestampFromBlock = (targetBlock: number) => {\n    return Number(block.timestamp) + (targetBlock - Number(block.number)) * blockTime(chainId)\n  }\n  return pools.map((cakePoolConfig, index) => {\n    const [startBlock, endBlock] = startEndBlockResult[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startTimestamp: getTimestampFromBlock(Number(startBlock)),\n      endTimestamp: getTimestampFromBlock(Number(endBlock)),\n    }\n  })\n}\n\nexport const fetchPoolsTimeLimits = async (chainId: ChainId, provider: OnChainProvider) => {\n  const livedPools = await getLivePoolsWithEnd(chainId)\n  if (!livedPools) {\n    return null\n  }\n  const upgradedPools = livedPools.filter(isUpgradedPool)\n  const legacyPools = livedPools.filter(isLegacyPool)\n  const [upgradePoolLimits, legacyPoolLimits] = await Promise.all([\n    fetchUpgradedPoolsTimeLimits(upgradedPools, chainId, provider),\n    fetchLegacyPoolsBlockLimits(legacyPools, chainId, provider),\n  ])\n  return [...upgradePoolLimits, ...legacyPoolLimits]\n}\n\nexport const fetchPoolsTotalStaking = async (chainId: ChainId, provider: OnChainProvider) => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    return null\n  }\n  const poolsBalanceOf = poolsConfig.map(({ contractAddress, stakingToken }) => {\n    return {\n      abi: erc20ABI,\n      address: stakingToken.address,\n      functionName: 'balanceOf',\n      args: [contractAddress],\n    } as const\n  })\n\n  const client = provider({ chainId })\n  const poolsTotalStaked = await client.multicall({\n    contracts: poolsBalanceOf,\n    allowFailure: false,\n  })\n\n  return poolsConfig.map((p, index) => ({\n    sousId: p.sousId,\n    totalStaked: new BigNumber(poolsTotalStaked[index].toString()).toJSON(),\n  }))\n}\n\ninterface FetchingPoolsStakingLimitsParams {\n  poolsWithStakingLimit: number[]\n  chainId: ChainId\n  provider: OnChainProvider\n}\n\nexport const fetchPoolsStakingLimitsByBlock = async ({\n  poolsWithStakingLimit,\n  chainId,\n  provider,\n}: FetchingPoolsStakingLimitsParams): Promise<{\n  [key: string]: { stakingLimit: BigNumber; numberSecondsForUserLimit: number }\n}> => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    throw new Error(`No pools found on chain ${chainId}`)\n  }\n\n  const validPools = poolsConfig\n    .filter(isLegacyPool)\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  const poolStakingCalls = validPools\n    .map(({ contractAddress }) => {\n      return (['hasUserLimit', 'poolLimitPerUser', 'numberBlocksForUserLimit'] as const).map(\n        (method) =>\n          ({\n            address: contractAddress,\n            functionName: method,\n            abi: sousChefV2ABI,\n          } as const),\n      )\n    })\n    .flat()\n\n  const client = provider({ chainId })\n\n  const poolStakingResultRaw = await client.multicall({\n    contracts: poolStakingCalls,\n    allowFailure: true,\n  })\n\n  const chunkSize = poolStakingCalls.length / validPools.length\n  const poolStakingChunkedResultRaw = chunk(poolStakingResultRaw.flat(), chunkSize)\n  return fromPairs(\n    poolStakingChunkedResultRaw.map((stakingLimitRaw, index) => {\n      const hasUserLimit = stakingLimitRaw[0]?.result as boolean\n      const stakingLimit =\n        hasUserLimit && stakingLimitRaw[1].result ? new BigNumber(stakingLimitRaw[1].result.toString()) : BIG_ZERO\n      const numberBlocksForUserLimit = stakingLimitRaw[2].result ? Number(stakingLimitRaw[2].result) : 0\n      const numberSecondsForUserLimit = numberBlocksForUserLimit * blockTime(chainId)\n      return [validPools[index].sousId, { stakingLimit, numberSecondsForUserLimit }]\n    }),\n  )\n}\n\nconst fetchPoolsStakingLimitsByTime = async ({\n  poolsWithStakingLimit,\n  chainId,\n  provider,\n}: FetchingPoolsStakingLimitsParams): Promise<{\n  [key: string]: { stakingLimit: BigNumber; numberSecondsForUserLimit: number }\n}> => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    throw new Error(`No pools found on chain ${chainId}`)\n  }\n\n  const validPools = poolsConfig\n    .filter(isUpgradedPool)\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  const poolStakingCalls = validPools\n    .map(({ contractAddress }) => {\n      return (['hasUserLimit', 'poolLimitPerUser', 'numberSecondsForUserLimit'] as const).map(\n        (method) =>\n          ({\n            abi: smartChefABI,\n            address: contractAddress,\n            functionName: method,\n          } as const),\n      )\n    })\n    .flat()\n\n  const client = provider({ chainId })\n  const poolStakingResultRaw = await client.multicall({\n    contracts: poolStakingCalls,\n    allowFailure: true,\n  })\n  const chunkSize = poolStakingCalls.length / validPools.length\n  const poolStakingChunkedResultRaw = chunk(poolStakingResultRaw.flat(), chunkSize)\n  return fromPairs(\n    poolStakingChunkedResultRaw.map((stakingLimitRaw, index) => {\n      const hasUserLimit = stakingLimitRaw[0].result\n      const stakingLimit =\n        hasUserLimit && stakingLimitRaw[1].result ? new BigNumber(stakingLimitRaw[1].result.toString()) : BIG_ZERO\n      const numberSecondsForUserLimit = stakingLimitRaw[2].result ? Number(stakingLimitRaw[2].result) : 0\n      return [validPools[index].sousId, { stakingLimit, numberSecondsForUserLimit }]\n    }),\n  )\n}\n\nexport const fetchPoolsStakingLimits = async (\n  params: FetchingPoolsStakingLimitsParams,\n): Promise<{\n  [key: string]: { stakingLimit: BigNumber; numberSecondsForUserLimit: number }\n}> => {\n  const [limitsByTime, limitsByBlock] = await Promise.all([\n    fetchPoolsStakingLimitsByTime(params),\n    fetchPoolsStakingLimitsByBlock(params),\n  ])\n  return {\n    ...limitsByTime,\n    ...limitsByBlock,\n  }\n}\n\nexport const fetchPoolsProfileRequirement = async (\n  chainId: ChainId,\n  provider: OnChainProvider,\n): Promise<{\n  [key: string]: {\n    required: boolean\n    thresholdPoints: string\n  }\n}> => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    throw new Error(`No pools found on chain ${chainId}`)\n  }\n\n  const livePoolsWithV3 = poolsConfig.filter(\n    (pool) => (isUpgradedPool(pool) || (isLegacyPool(pool) && pool?.version === 3)) && !pool?.isFinished,\n  )\n  const poolProfileRequireCalls = livePoolsWithV3\n    .map(({ contractAddress }) => {\n      return (['pancakeProfileIsRequested', 'pancakeProfileThresholdPoints'] as const).map(\n        (method) =>\n          ({\n            abi: sousChefV3ABI,\n            address: contractAddress,\n            functionName: method,\n          } as const),\n      )\n    })\n    .flat()\n\n  const client = provider({ chainId })\n  const poolProfileRequireResultRaw = await client.multicall({\n    contracts: poolProfileRequireCalls,\n  })\n\n  const chunkSize = poolProfileRequireCalls.length / livePoolsWithV3.length\n  const poolStakingChunkedResultRaw = chunk(poolProfileRequireResultRaw.flat(), chunkSize)\n  return fromPairs(\n    poolStakingChunkedResultRaw.map((poolProfileRequireRaw, index) => {\n      const hasProfileRequired = poolProfileRequireRaw[0].result\n      const profileThresholdPoints = poolProfileRequireRaw[1].result\n        ? new BigNumber(poolProfileRequireRaw[1].result.toString())\n        : BIG_ZERO\n      return [\n        livePoolsWithV3[index].sousId,\n        {\n          required: !!hasProfileRequired,\n          thresholdPoints: profileThresholdPoints.toJSON(),\n        },\n      ]\n    }),\n  )\n}\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_TWO = new BigNumber(2)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\nexport const BIG_ONE_HUNDRED = new BigNumber(100)\n\nexport const bigIntToSerializedBigNumber = (bigint: bigint): string => bigIntToBigNumber(bigint).toJSON()\n\nexport const bigIntToBigNumber = (bigint: bigint): BigNumber => new BigNumber(bigint.toString())\n","export const sousChefABI = [\n  {\n    inputs: [],\n    name: 'bonusEndBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'emergencyRewardWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'emergencyWithdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [\n      { internalType: 'uint256', name: '_from', type: 'uint256' },\n      { internalType: 'uint256', name: '_to', type: 'uint256' },\n    ],\n    name: 'getMultiplier',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'massUpdatePools', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'pendingReward',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'poolInfo',\n    outputs: [\n      { internalType: 'contract IBEP20', name: 'lpToken', type: 'address' },\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\n      { internalType: 'uint256', name: 'accCakePerShare', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'rewardPerBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [{ internalType: 'contract IBEP20', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'startBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'stopReward', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'syrup',\n    outputs: [{ internalType: 'contract IBEP20', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\n    name: 'updatePool',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","export const sousChefV2ABI = [\n  {\n    inputs: [],\n    name: 'PRECISION_FACTOR',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'accTokenPerShare',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'bonusEndBlock',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'emergencyRewardWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'emergencyWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'hasUserLimit',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'lastRewardBlock',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'numberBlocksForUserLimit',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_user',\n        type: 'address',\n      },\n    ],\n    name: 'pendingReward',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'poolLimitPerUser',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_tokenAddress',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_tokenAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'recoverWrongTokens',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardPerBlock',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [\n      {\n        internalType: 'contract IBEP20',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'stakedToken',\n    outputs: [\n      {\n        internalType: 'contract IBEP20',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'startBlock',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'stopReward',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_hasUserLimit',\n        type: 'bool',\n      },\n      {\n        internalType: 'uint256',\n        name: '_poolLimitPerUser',\n        type: 'uint256',\n      },\n    ],\n    name: 'updatePoolLimitPerUser',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_rewardPerBlock',\n        type: 'uint256',\n      },\n    ],\n    name: 'updateRewardPerBlock',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_startBlock',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_bonusEndBlock',\n        type: 'uint256',\n      },\n    ],\n    name: 'updateStartAndEndBlocks',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'userInfo',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'rewardDebt',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","export const smartChefABI = [\n  {\n    inputs: [\n      { internalType: 'address', name: '_pancakeProfile', type: 'address' },\n      { internalType: 'bool', name: '_pancakeProfileIsRequested', type: 'bool' },\n      { internalType: 'uint256', name: '_pancakeProfileThresholdPoints', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'EmergencyWithdraw',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'poolLimitPerUser', type: 'uint256' }],\n    name: 'NewPoolLimit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'rewardPerSecond', type: 'uint256' }],\n    name: 'NewRewardPerSecond',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: 'uint256', name: 'startTimestamp', type: 'uint256' },\n      { indexed: false, internalType: 'uint256', name: 'endTimestamp', type: 'uint256' },\n    ],\n    name: 'NewStartAndEndTimestamp',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],\n    name: 'RewardsStop',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'token', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'TokenRecovery',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: 'bool', name: 'isProfileRequested', type: 'bool' },\n      { indexed: false, internalType: 'uint256', name: 'thresholdPoints', type: 'uint256' },\n    ],\n    name: 'UpdateProfileAndThresholdPointsRequirement',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'PRECISION_FACTOR',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'SMART_CHEF_FACTORY',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'accTokenPerShare',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'emergencyRewardWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'emergencyWithdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'endTimestamp',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'hasUserLimit',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'contract IERC20Metadata', name: '_stakedToken', type: 'address' },\n      { internalType: 'contract IERC20Metadata', name: '_rewardToken', type: 'address' },\n      { internalType: 'uint256', name: '_rewardPerSecond', type: 'uint256' },\n      { internalType: 'uint256', name: '_startTimestamp', type: 'uint256' },\n      { internalType: 'uint256', name: '_endTimestamp', type: 'uint256' },\n      { internalType: 'uint256', name: '_poolLimitPerUser', type: 'uint256' },\n      { internalType: 'uint256', name: '_numberSecondsForUserLimit', type: 'uint256' },\n      { internalType: 'address', name: '_admin', type: 'address' },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'isInitialized',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'lastRewardTimestamp',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'numberSecondsForUserLimit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfile',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfileIsRequested',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfileThresholdPoints',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'pendingReward',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'poolLimitPerUser',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_token', type: 'address' }],\n    name: 'recoverToken',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'rewardPerSecond',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [{ internalType: 'contract IERC20Metadata', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'stakedToken',\n    outputs: [{ internalType: 'contract IERC20Metadata', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'startTimestamp',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'stopReward', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'bool', name: '_userLimit', type: 'bool' },\n      { internalType: 'uint256', name: '_poolLimitPerUser', type: 'uint256' },\n    ],\n    name: 'updatePoolLimitPerUser',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'bool', name: '_isRequested', type: 'bool' },\n      { internalType: 'uint256', name: '_thresholdPoints', type: 'uint256' },\n    ],\n    name: 'updateProfileAndThresholdPointsRequirement',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_rewardPerSecond', type: 'uint256' }],\n    name: 'updateRewardPerSecond',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: '_startTimestamp', type: 'uint256' },\n      { internalType: 'uint256', name: '_endTimestamp', type: 'uint256' },\n    ],\n    name: 'updateStartAndEndTimestamp',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'userLimit',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","export const sousChefV3ABI = [\n  {\n    inputs: [\n      { internalType: 'address', name: '_pancakeProfile', type: 'address' },\n      { internalType: 'bool', name: '_pancakeProfileIsRequested', type: 'bool' },\n      { internalType: 'uint256', name: '_pancakeProfileThresholdPoints', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'EmergencyWithdraw',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'poolLimitPerUser', type: 'uint256' }],\n    name: 'NewPoolLimit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'rewardPerBlock', type: 'uint256' }],\n    name: 'NewRewardPerBlock',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: 'uint256', name: 'startBlock', type: 'uint256' },\n      { indexed: false, internalType: 'uint256', name: 'endBlock', type: 'uint256' },\n    ],\n    name: 'NewStartAndEndBlocks',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],\n    name: 'RewardsStop',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'token', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'TokenRecovery',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: 'bool', name: 'isProfileRequested', type: 'bool' },\n      { indexed: false, internalType: 'uint256', name: 'thresholdPoints', type: 'uint256' },\n    ],\n    name: 'UpdateProfileAndThresholdPointsRequirement',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'user', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'PRECISION_FACTOR',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'SMART_CHEF_FACTORY',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'accTokenPerShare',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'bonusEndBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'emergencyRewardWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'emergencyWithdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'hasUserLimit',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'contract IERC20Metadata', name: '_stakedToken', type: 'address' },\n      { internalType: 'contract IERC20Metadata', name: '_rewardToken', type: 'address' },\n      { internalType: 'uint256', name: '_rewardPerBlock', type: 'uint256' },\n      { internalType: 'uint256', name: '_startBlock', type: 'uint256' },\n      { internalType: 'uint256', name: '_bonusEndBlock', type: 'uint256' },\n      { internalType: 'uint256', name: '_poolLimitPerUser', type: 'uint256' },\n      { internalType: 'uint256', name: '_numberBlocksForUserLimit', type: 'uint256' },\n      { internalType: 'address', name: '_admin', type: 'address' },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'isInitialized',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'lastRewardBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'numberBlocksForUserLimit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfile',\n    outputs: [{ internalType: 'contract IPancakeProfile', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfileIsRequested',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pancakeProfileThresholdPoints',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'pendingReward',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'poolLimitPerUser',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_token', type: 'address' }],\n    name: 'recoverToken',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'rewardPerBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [{ internalType: 'contract IERC20Metadata', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'stakedToken',\n    outputs: [{ internalType: 'contract IERC20Metadata', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'startBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'stopReward', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'bool', name: '_userLimit', type: 'bool' },\n      { internalType: 'uint256', name: '_poolLimitPerUser', type: 'uint256' },\n    ],\n    name: 'updatePoolLimitPerUser',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'bool', name: '_isRequested', type: 'bool' },\n      { internalType: 'uint256', name: '_thresholdPoints', type: 'uint256' },\n    ],\n    name: 'updateProfileAndThresholdPointsRequirement',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_rewardPerBlock', type: 'uint256' }],\n    name: 'updateRewardPerBlock',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: '_startBlock', type: 'uint256' },\n      { internalType: 'uint256', name: '_bonusEndBlock', type: 'uint256' },\n    ],\n    name: 'updateStartAndEndBlocks',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'userLimit',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","import { ChainId } from '@pancakeswap/sdk'\n\nimport { ContractAddresses } from '../constants/contracts'\nimport { isPoolsSupported } from './isPoolsSupported'\n\nexport function getContractAddress(addresses: ContractAddresses, chainId: ChainId) {\n  if (!isPoolsSupported(chainId)) {\n    throw new Error(`Cannot get contract address. Unsupported chain ${chainId}`)\n  }\n  return addresses[chainId]\n}\n","import { LegacySerializedPool, SerializedPool, UpgradedSerializedPool } from '../types'\n\nexport function isLegacyPool(pool: SerializedPool): pool is LegacySerializedPool {\n  return !(pool as any).tokenPerSecond\n}\n\nexport function isUpgradedPool(pool: SerializedPool): pool is UpgradedSerializedPool {\n  return !!(pool as any).tokenPerSecond\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\n\nimport { blocksPerYear, SECONDS_IN_YEAR } from \"../constants\";\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @param chainId Chain ID of the chain to calculate pool APRs for\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolAprByTokenPerBlock = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n  chainId: ChainId\n): number | null => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(blocksPerYear(chainId))\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport const getPoolAprByTokenPerSecond = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerSecond: number,\n): number | null => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerSecond).times(SECONDS_IN_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { WalletClient, getContract, PublicClient, Address, GetContractReturnType, Account, Chain } from 'viem'\n\nimport { getPoolsConfig } from '../constants'\nimport { isLegacyPool } from './isLegacyPool'\nimport { smartChefABI } from '../abis/ISmartChef'\nimport { PoolCategory } from '../types'\nimport { sousChefV2ABI } from '../abis/ISousChefV2'\nimport { sousChefBnbABI } from '../abis/ISousChefBNB'\n\ninterface Params {\n  chainId?: ChainId\n  sousId: number\n  signer?: any\n  publicClient?: any\n}\n\ntype GetContractReturnType_<TAbi extends readonly unknown[]> = GetContractReturnType<TAbi, any, any> & {\n  abi: TAbi\n  address: Address\n  account?: Account\n  chain?: Chain\n}\n\nexport function getSousChefBNBContract({\n  address,\n  signer,\n  publicClient,\n}: {\n  address: Address\n  signer?: WalletClient\n  publicClient?: PublicClient\n}): GetContractReturnType_<typeof sousChefBnbABI> {\n  return {\n    ...getContract({\n      abi: sousChefBnbABI,\n      address,\n      walletClient: signer,\n      publicClient,\n    }),\n    abi: sousChefBnbABI,\n    address,\n    account: signer?.account,\n    chain: signer?.chain,\n  }\n}\n\nexport function getSousChefV2Contract({\n  address,\n  signer,\n  publicClient,\n}: {\n  address: Address\n  signer?: WalletClient\n  publicClient?: PublicClient\n}): GetContractReturnType_<typeof sousChefV2ABI> {\n  return {\n    ...getContract({\n      abi: sousChefV2ABI,\n      address,\n      walletClient: signer,\n      publicClient,\n    }),\n    abi: sousChefV2ABI,\n    address,\n    account: signer?.account,\n    chain: signer?.chain,\n  }\n}\n\nexport function getSmartChefChefV2Contract({\n  address,\n  signer,\n  publicClient,\n}: {\n  address: Address\n  signer?: WalletClient\n  publicClient?: PublicClient\n}): GetContractReturnType_<typeof smartChefABI> {\n  return {\n    ...getContract({\n      abi: smartChefABI,\n      address,\n      walletClient: signer,\n      publicClient,\n    }),\n    abi: smartChefABI,\n    address,\n    account: signer?.account,\n    chain: signer?.chain,\n  }\n}\n\nexport function getPoolContractBySousId({ chainId, sousId, signer, publicClient }: Params): any | null {\n  if (!chainId) {\n    return null\n  }\n  const pools = getPoolsConfig(chainId)\n  const pool = pools?.find((p) => p.sousId === Number(sousId))\n  if (!pool) {\n    return null\n  }\n  const { contractAddress } = pool\n  if (isLegacyPool(pool)) {\n    if (pool.poolCategory === PoolCategory.BINANCE || pool.poolCategory === PoolCategory.BINANCE_AUTO) {\n      return getSousChefBNBContract({ address: contractAddress, signer, publicClient })\n    }\n    return getSousChefV2Contract({ address: contractAddress, signer, publicClient })\n  }\n  return getSmartChefChefV2Contract({ address: contractAddress, signer, publicClient })\n}\n","export const sousChefBnbABI = [\n  {\n    inputs: [],\n    name: 'WBNB',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'adminAddress',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'bonusEndBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'deposit', outputs: [], stateMutability: 'payable', type: 'function' },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'emergencyRewardWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'emergencyWithdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [\n      { internalType: 'uint256', name: '_from', type: 'uint256' },\n      { internalType: 'uint256', name: '_to', type: 'uint256' },\n    ],\n    name: 'getMultiplier',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'limitAmount',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'massUpdatePools', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'pendingReward',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'poolInfo',\n    outputs: [\n      { internalType: 'contract IBEP20', name: 'lpToken', type: 'address' },\n      { internalType: 'uint256', name: 'allocPoint', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastRewardBlock', type: 'uint256' },\n      { internalType: 'uint256', name: 'accCakePerShare', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_blacklistAddress', type: 'address' }],\n    name: 'removeBlackList',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'rewardPerBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'rewardToken',\n    outputs: [{ internalType: 'contract IBEP20', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_adminAddress', type: 'address' }],\n    name: 'setAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_blacklistAddress', type: 'address' }],\n    name: 'setBlackList',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'setLimitAmount',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'startBlock',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalAllocPoint',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_pid', type: 'uint256' }],\n    name: 'updatePool',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'uint256', name: 'rewardDebt', type: 'uint256' },\n      { internalType: 'bool', name: 'inBlackList', type: 'bool' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n","import {ChainId, WETH9} from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\nimport uniq from 'lodash/uniq'\nimport fromPairs from 'lodash/fromPairs'\nimport { erc20ABI } from 'wagmi'\nimport { Address } from 'viem'\nimport { getPoolsConfig } from '../constants'\nimport { sousChefABI } from '../abis/ISousChef'\nimport { OnChainProvider, SerializedPool } from '../types'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst getPoolsFactory = (filter: (pool: SerializedPool) => boolean) => (chainId: ChainId) => {\n  const poolsConfig = getPoolsConfig(chainId)\n  if (!poolsConfig) {\n    throw new Error(`Unable to get pools config on chain ${chainId}`)\n  }\n  return poolsConfig.filter(filter)\n}\nconst getNonBnbPools = getPoolsFactory((pool) => pool.stakingToken.symbol.toLowerCase() !== WETH9[pool.stakingToken.chainId].symbol.toLowerCase().substring(1))\nconst getBnbPools = getPoolsFactory((pool) => pool.stakingToken.symbol.toLowerCase() === WETH9[pool.stakingToken.chainId].symbol.toLowerCase().substring(1))\nconst getNonMasterPools = getPoolsFactory((pool) => true)\n\ninterface FetchUserDataParams {\n  account: string\n  chainId: ChainId\n  provider: OnChainProvider\n}\n\nexport const fetchPoolsAllowance = async ({ account, chainId, provider }: FetchUserDataParams) => {\n  const nonBnbPools = getNonBnbPools(chainId)\n\n  const client = provider({ chainId })\n  const allowances = await client.multicall({\n    contracts: nonBnbPools.map(\n      ({ contractAddress, stakingToken }) =>\n        ({\n          address: stakingToken.address,\n          abi: erc20ABI,\n          functionName: 'allowance',\n          args: [account as Address, contractAddress] as const,\n        } as const),\n    ),\n    allowFailure: false,\n  })\n  return fromPairs(\n    nonBnbPools.map((pool, index) => [pool.sousId, new BigNumber(allowances[index].toString()).toJSON()]),\n  )\n}\n\nexport const fetchUserBalances = async ({ account, chainId, provider }: FetchUserDataParams) => {\n  const nonBnbPools = getNonBnbPools(chainId)\n  const bnbPools = getBnbPools(chainId)\n  // Non BNB pools\n  const tokens = uniq(nonBnbPools.map((pool) => pool.stakingToken.address))\n  const client = provider({ chainId })\n  const tokenBalance = await client.multicall({\n    contracts: [\n      {\n        abi: [\n          {\n            inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],\n            name: 'getEthBalance',\n            outputs: [{ internalType: 'uint256', name: 'balance', type: 'uint256' }],\n            stateMutability: 'view',\n            type: 'function',\n          },\n        ] as const,\n        address: '0xcA11bde05977b3631167028862bE2a173976CA11', // TODO: Here is multicall address, should extract addresses to a package for multi chain\n        functionName: 'getEthBalance',\n        args: [account as Address] as const,\n      } as const,\n      ...tokens.map(\n        (token) =>\n          ({\n            abi: erc20ABI,\n            address: token,\n            functionName: 'balanceOf',\n            args: [account] as const,\n          } as const),\n      ),\n    ],\n  })\n  const [bnbBalance, ...tokenBalancesResults] = tokenBalance\n\n  const tokenBalances = fromPairs(tokens.map((token, index) => [token, tokenBalancesResults[index].result as bigint]))\n\n  const poolTokenBalances = fromPairs(\n    nonBnbPools\n      .map<[number, string] | null>((pool) => {\n        if (!tokenBalances[pool.stakingToken.address]) return null\n        return [pool.sousId, new BigNumber(tokenBalances[pool.stakingToken.address].toString()).toJSON()]\n      })\n      .filter((p): p is [number, string] => Boolean(p)),\n  )\n\n  // BNB pools\n  const bnbBalanceJson = new BigNumber((bnbBalance.result as bigint)?.toString()).toJSON()\n  const bnbBalances = fromPairs(bnbPools.map((pool) => [pool.sousId, bnbBalanceJson]))\n\n  return { ...poolTokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async ({ account, chainId, provider }: FetchUserDataParams) => {\n  const nonMasterPools = getNonMasterPools(chainId)\n\n  const client = provider({ chainId })\n  const userInfo = await client.multicall({\n    contracts: nonMasterPools.map(\n      ({ contractAddress }) =>\n        ({\n          abi: sousChefABI.filter((r) => r.name === 'userInfo'),\n          address: contractAddress,\n          functionName: 'userInfo',\n          args: [account as Address] as const,\n        } as const),\n    ),\n    allowFailure: false,\n  })\n\n  return fromPairs(\n    nonMasterPools.map((pool, index) => [pool.sousId, new BigNumber(userInfo[index][0].toString()).toJSON()]),\n  )\n}\n\nexport const fetchUserPendingRewards = async ({ account, chainId, provider }: FetchUserDataParams) => {\n  const nonMasterPools = getNonMasterPools(chainId)\n\n  const client = provider({ chainId })\n  const res = await client.multicall({\n    contracts: nonMasterPools.map(\n      ({ contractAddress }) =>\n        ({\n          abi: sousChefABI.filter((r) => r.name === 'pendingReward'),\n          address: contractAddress,\n          functionName: 'pendingReward',\n          args: [account as Address] as const,\n        } as const),\n    ),\n    allowFailure: false,\n  })\n  return fromPairs(nonMasterPools.map((pool, index) => [pool.sousId, new BigNumber(res[index].toString()).toJSON()]))\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { Address, getContract, WalletClient, GetContractReturnType, PublicClient } from 'viem'\n\nimport { iCakeABI } from '../abis/ICake'\nimport { IICE } from '../constants/contracts'\nimport { OnChainProvider } from '../types'\nimport { getContractAddress } from '../utils'\n\nexport const getIfoCreditAddressContract = (\n  chainId: ChainId,\n  provider: OnChainProvider,\n  walletClient?: WalletClient,\n): GetContractReturnType<typeof iCakeABI, PublicClient, WalletClient> => {\n  const address = getContractAddress(IICE, chainId)\n  if (!address || address === '0x') {\n    throw new Error(`ICAKE not supported on chain ${chainId}`)\n  }\n\n  return getContract({ abi: iCakeABI, address, publicClient: provider({ chainId }), walletClient })\n}\n\nexport const fetchPublicIfoData = async (chainId: ChainId, provider: OnChainProvider) => {\n  try {\n    const ifoCreditAddressContract = getIfoCreditAddressContract(chainId, provider)\n    const ceiling = await ifoCreditAddressContract.read.ceiling()\n    return {\n      ceiling: new BigNumber(ceiling.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      ceiling: BIG_ZERO.toJSON(),\n    }\n  }\n}\n\ninterface Params {\n  account: Address\n  chainId: ChainId\n  provider: OnChainProvider\n}\n\nexport const fetchUserIfoCredit = async ({ account, chainId, provider }: Params) => {\n  try {\n    const ifoCreditAddressContract = getIfoCreditAddressContract(chainId, provider)\n    const credit = await ifoCreditAddressContract.read.getUserCredit([account])\n    return new BigNumber(credit.toString()).toJSON()\n  } catch (error) {\n    console.error(error)\n    return BIG_ZERO.toJSON()\n  }\n}\n","export const iCakeABI = [\n  {\n    inputs: [],\n    name: 'MIN_CEILING_DURATION',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'admin',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cakePool',\n    outputs: [{ internalType: 'contract ICaKePool', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ceiling',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'getUserCredit',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_newCeiling', type: 'uint256' }],\n    name: 'updateCeiling',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { ICE } from '@pancakeswap/tokens'\nimport { Address } from 'viem'\n\nimport { cakeVaultV2ABI } from '../abis/ICakeVaultV2'\nimport { OnChainProvider } from '../types'\nimport { getCakeFlexibleSideVaultAddress, getCakeVaultAddress } from './getAddresses'\n\ninterface Params {\n  cakeVaultAddress?: Address\n  chainId: ChainId\n  provider: OnChainProvider\n}\n\nconst balanceOfAbi = [\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nexport const fetchPublicVaultData = async ({\n  chainId,\n  cakeVaultAddress = getCakeVaultAddress(chainId),\n  provider,\n}: Params) => {\n  try {\n    const client = provider({ chainId })\n\n    const [sharePrice, shares, totalLockedAmount, totalCakeInVault] = await client.multicall({\n      contracts: [\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'getPricePerFullShare',\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'totalShares',\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'totalLockedAmount',\n        },\n        {\n          abi: balanceOfAbi,\n          address: ICE[chainId].address,\n          functionName: 'balanceOf',\n          args: [cakeVaultAddress],\n        },\n      ],\n      allowFailure: true,\n    })\n\n    const totalSharesAsBigNumber =\n      shares.status === 'success' && shares.result ? new BigNumber(shares.result.toString()) : BIG_ZERO\n    const totalLockedAmountAsBigNumber =\n      totalLockedAmount.status === 'success' && totalLockedAmount.result\n        ? new BigNumber(totalLockedAmount.result.toString())\n        : BIG_ZERO\n    const sharePriceAsBigNumber =\n      sharePrice.status === 'success' && sharePrice.result ? new BigNumber(sharePrice.result.toString()) : BIG_ZERO\n\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      totalLockedAmount: totalLockedAmountAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVault.result ? new BigNumber(totalCakeInVault.result.toString()).toJSON() : '0',\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      totalLockedAmount: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n    }\n  }\n}\n\nexport const fetchPublicFlexibleSideVaultData = async ({\n  chainId,\n  cakeVaultAddress = getCakeFlexibleSideVaultAddress(chainId),\n  provider,\n}: Params) => {\n  try {\n    const client = provider({ chainId })\n\n    const [sharePrice, shares, totalCakeInVault] = await client.multicall({\n      contracts: [\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'getPricePerFullShare',\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'totalShares',\n        },\n        {\n          abi: balanceOfAbi,\n          address: ICE[chainId].address,\n          functionName: 'balanceOf',\n          args: [cakeVaultAddress],\n        },\n      ],\n      allowFailure: true,\n    })\n\n    const totalSharesAsBigNumber = shares.status === 'success' ? new BigNumber(shares.result.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber =\n      sharePrice.status === 'success' ? new BigNumber(sharePrice.result.toString()) : BIG_ZERO\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: new BigNumber((totalCakeInVault.result || '0').toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async ({\n  chainId,\n  cakeVaultAddress = getCakeVaultAddress(chainId),\n  provider,\n}: Params) => {\n  try {\n    const client = provider({ chainId })\n\n    const [performanceFee, withdrawalFee, withdrawalFeePeriod] = await client.multicall({\n      contracts: [\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'performanceFee',\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'withdrawFee',\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'withdrawFeePeriod',\n        },\n      ],\n      allowFailure: false,\n    })\n\n    return {\n      performanceFee: Number(performanceFee),\n      withdrawalFee: Number(withdrawalFee),\n      withdrawalFeePeriod: Number(withdrawalFeePeriod),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n","export const cakeVaultV2ABI = [\n  {\n    inputs: [],\n    name: 'BOOST_WEIGHT',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'BOOST_WEIGHT_LIMIT',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'DURATION_FACTOR',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'DURATION_FACTOR_OVERDUE',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_CALL_FEE',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_LOCK_DURATION',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_LOCK_DURATION_LIMIT',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_PERFORMANCE_FEE',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_WITHDRAW_FEE',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_WITHDRAW_FEE_PERIOD',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_DEPOSIT_AMOUNT',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_LOCK_DURATION',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_WITHDRAW_AMOUNT',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'PRECISION_FACTOR',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'PRECISION_FACTOR_SHARE',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'UNLOCK_FREE_DURATION',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'admin',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'available',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'boostContract',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cakePoolPID',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'calculateOverdueFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'calculatePerformanceFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'calculateTotalPendingCakeRewards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_user', type: 'address' },\n      { internalType: 'uint256', name: '_shares', type: 'uint256' },\n    ],\n    name: 'calculateWithdrawFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: '_amount', type: 'uint256' },\n      { internalType: 'uint256', name: '_lockDuration', type: 'uint256' },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'freeFeeUsers',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPricePerFullShare',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_token', type: 'address' }],\n    name: 'inCaseTokensGetStuck',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'contract IERC20', name: 'dummyToken', type: 'address' }],\n    name: 'init',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'lastHarvestedTime',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'masterchefV2',\n    outputs: [{ internalType: 'contract IMasterChefV2', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'operator',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'overdueFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [],\n    name: 'paused',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'performanceFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'performanceFeeContract',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'address', name: '_admin', type: 'address' }],\n    name: 'setAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_boostContract', type: 'address' }],\n    name: 'setBoostContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_boostWeight', type: 'uint256' }],\n    name: 'setBoostWeight',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_durationFactor', type: 'uint256' }],\n    name: 'setDurationFactor',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_durationFactorOverdue', type: 'uint256' }],\n    name: 'setDurationFactorOverdue',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_user', type: 'address' },\n      { internalType: 'bool', name: '_free', type: 'bool' },\n    ],\n    name: 'setFreeFeeUser',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_maxLockDuration', type: 'uint256' }],\n    name: 'setMaxLockDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_operator', type: 'address' }],\n    name: 'setOperator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_performanceFee', type: 'uint256' }],\n    name: 'setPerformanceFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_performanceFeeContract', type: 'uint256' }],\n    name: 'setPerformanceFeeContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_treasury', type: 'address' }],\n    name: 'setTreasury',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_unlockFreeDuration', type: 'uint256' }],\n    name: 'setUnlockFreeDuration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_withdrawFee', type: 'uint256' }],\n    name: 'setWithdrawFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_withdrawFeeContract', type: 'uint256' }],\n    name: 'setWithdrawFeeContract',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_withdrawFeePeriod', type: 'uint256' }],\n    name: 'setWithdrawFeePeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'token',\n    outputs: [{ internalType: 'contract IERC20', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalBoostDebt',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalLockedAmount',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalShares',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'treasury',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\n    name: 'unlock',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'unpause', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'userInfo',\n    outputs: [\n      { internalType: 'uint256', name: 'shares', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastDepositedTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'cakeAtLastUserAction', type: 'uint256' },\n      { internalType: 'uint256', name: 'lastUserActionTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'lockStartTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'lockEndTime', type: 'uint256' },\n      { internalType: 'uint256', name: 'userBoostedShare', type: 'uint256' },\n      { internalType: 'bool', name: 'locked', type: 'bool' },\n      { internalType: 'uint256', name: 'lockedAmount', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: '_shares', type: 'uint256' }],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { inputs: [], name: 'withdrawAll', outputs: [], stateMutability: 'nonpayable', type: 'function' },\n  {\n    inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n    name: 'withdrawByAmount',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawFee',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawFeeContract',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawFeePeriod',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n","import { ChainId } from '@pancakeswap/sdk'\n\nimport { ICE_FLEXIBLE_SIDE_VAULT, ICE_VAULT } from '../constants/contracts'\nimport { getContractAddress } from '../utils'\n\nexport function getCakeFlexibleSideVaultAddress(chainId: ChainId) {\n  return getContractAddress(ICE_FLEXIBLE_SIDE_VAULT, chainId)\n}\n\nexport function getCakeVaultAddress(chainId: ChainId) {\n  return getContractAddress(ICE_VAULT, chainId)\n}\n","import BigNumber from 'bignumber.js'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { Address } from 'viem'\n\nimport { OnChainProvider, SerializedLockedVaultUser, SerializedVaultUser } from '../types'\nimport { cakeVaultV2ABI } from '../abis/ICakeVaultV2'\nimport { getCakeFlexibleSideVaultAddress, getCakeVaultAddress } from './getAddresses'\nimport { cakeFlexibleSideVaultV2ABI } from '../abis/ICakeFlexibleSideVaultV2'\n\ninterface Params {\n  account: Address\n  chainId: ChainId\n  provider: OnChainProvider\n}\n\nexport const fetchVaultUser = async ({ account, chainId, provider }: Params): Promise<SerializedLockedVaultUser> => {\n  try {\n    const cakeVaultAddress = getCakeVaultAddress(chainId)\n\n    const client = provider({ chainId })\n\n    const [userContractResponse, currentPerformanceFee, currentOverdueFee] = await client.multicall({\n      contracts: [\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'userInfo',\n          args: [account],\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'calculatePerformanceFee',\n          args: [account],\n        },\n        {\n          abi: cakeVaultV2ABI,\n          address: cakeVaultAddress,\n          functionName: 'calculateOverdueFee',\n          args: [account],\n        },\n      ],\n      allowFailure: false,\n    })\n\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse[0].toString()).toJSON(),\n      lastDepositedTime: userContractResponse[1].toString(),\n      lastUserActionTime: userContractResponse[3].toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse[2].toString()).toJSON(),\n      userBoostedShare: new BigNumber(userContractResponse[6].toString()).toJSON(),\n      locked: userContractResponse[7],\n      lockEndTime: userContractResponse[5].toString(),\n      lockStartTime: userContractResponse[4].toString(),\n      lockedAmount: new BigNumber(userContractResponse[8].toString()).toJSON(),\n      currentPerformanceFee: new BigNumber(currentPerformanceFee.toString()).toJSON(),\n      currentOverdueFee: new BigNumber(currentOverdueFee.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: '',\n      lastDepositedTime: '',\n      lastUserActionTime: '',\n      cakeAtLastUserAction: '',\n      userBoostedShare: '',\n      lockEndTime: '',\n      lockStartTime: '',\n      locked: false,\n      lockedAmount: '',\n      currentPerformanceFee: '',\n      currentOverdueFee: '',\n    }\n  }\n}\n\nexport const fetchFlexibleSideVaultUser = async ({\n  account,\n  chainId,\n  provider,\n}: Params): Promise<SerializedVaultUser> => {\n  try {\n    const userContractResponse = await await provider({ chainId }).readContract({\n      abi: cakeFlexibleSideVaultV2ABI,\n      address: getCakeFlexibleSideVaultAddress(chainId),\n      functionName: 'userInfo',\n      args: [account],\n    })\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse[0].toString()).toJSON(),\n      lastDepositedTime: userContractResponse[1].toString(),\n      lastUserActionTime: userContractResponse[3].toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse[2].toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: '',\n      lastDepositedTime: '',\n      lastUserActionTime: '',\n      cakeAtLastUserAction: '',\n    }\n  }\n}\n","export const cakeFlexibleSideVaultV2ABI = [\n  {\n    inputs: [],\n    name: 'MAX_PERFORMANCE_FEE',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_WITHDRAW_AMOUNT_BOOSTER',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_WITHDRAW_FEE',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MAX_WITHDRAW_FEE_PERIOD',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_DEPOSIT_AMOUNT',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_WITHDRAW_AMOUNT',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MIN_WITHDRAW_AMOUNT_BOOSTER',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'admin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cakePool',\n    outputs: [\n      {\n        internalType: 'contract ICakePool',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'deposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'emergencyWithdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPricePerFullShare',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n    ],\n    name: 'inCaseTokensGetStuck',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pause',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'paused',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'performanceFee',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_admin',\n        type: 'address',\n      },\n    ],\n    name: 'setAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_performanceFee',\n        type: 'uint256',\n      },\n    ],\n    name: 'setPerformanceFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_treasury',\n        type: 'address',\n      },\n    ],\n    name: 'setTreasury',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_withdrawAmountBooster',\n        type: 'uint256',\n      },\n    ],\n    name: 'setWithdrawAmountBooster',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_withdrawFee',\n        type: 'uint256',\n      },\n    ],\n    name: 'setWithdrawFee',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_withdrawFeePeriod',\n        type: 'uint256',\n      },\n    ],\n    name: 'setWithdrawFeePeriod',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'staking',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'token',\n    outputs: [\n      {\n        internalType: 'contract IERC20',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalShares',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'treasury',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unpause',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'userInfo',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'lastDepositedTime',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'cakeAtLastUserAction',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'lastUserActionTime',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawAmountBooster',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawFee',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdrawFeePeriod',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n"]}